<div class="container" style="height: 100vh;">
	 <div class="row d-flex justify-content-center align-items-center pt-2">
			<div class="col-lg-5 my-3">
				 <div class="card  px-5">
						<div class="card-body">
							 <div class="d-flex justify-content-center gap-2 align-items-center">
									<img src="<%#= current_logo %>" style="height: 100%;" class="mt-3">
							 </div>
							 <div class="d-flex justify-content-center my-3">
									<h3>Sign Up</h3>
							 </div>
							 <%= form_for(resource, as: resource_name, url: registration_path(resource_name)) do |f| %>
								 <%= render "devise/shared/error_messages", resource: resource %>
								 <div class="row">
										<div class="col-lg-6">
										 <div class="form-group my-2">
											<%= f.text_field :first_name, autofocus: true, autocomplete: "firstname", class: 'form-control', placeholder: 'First Name' %>
										 </div>
										</div>
										<div class="col-lg-6">
										 <div class="form-group my-2">
											<%= f.text_field :last_name, autofocus: true, autocomplete: "lastname", class: 'form-control', placeholder: 'Last Name' %>
										 </div>
										</div>
								 </div>

								 <div class="row">
									<div class="col-lg-6">
									 <div class="form-group my-2">
										<%= f.text_field :city, autofocus: true, autocomplete: "city", class: 'form-control', placeholder: 'City' %>
									 </div>
									</div>
									<div class="col-lg-6">
									 <div class="form-group my-2">
										<%= f.text_field :country, autofocus: true, autocomplete: "country", class: 'form-control', placeholder: 'Country' %>
									 </div>
									</div>
								 </div>

								 <div class="row">
									<div class="col-lg-6">
									 <div class="form-group my-2">
										<%= f.text_field :postal_code, autofocus: true, autocomplete: "postal_code", class: 'form-control', placeholder: 'Postal Code' %>
									 </div>
									</div>
									<div class="col-lg-6">
									  <div class="form-group my-2">
									    <input id="phone_number" type="tel" class="form-control mt-2 mb-2">
									    <%= f.hidden_field :phone_number, id: "hidden_phone_number" %>
									  </div>
									</div>
								 </div>

								 <div class="form-group my-2">
									<%= f.email_field :email, autofocus: true, autocomplete: "email", class: 'form-control', placeholder: 'Email' %>
								 </div>
								 <div class="row">
									<div class="col-lg-6">
									 <div class="form-group my-2">
										<%= f.password_field :password, autocomplete: "new-password", class: 'form-control', placeholder: 'Password' %>
									 </div>
									</div>
									<div class="col-lg-6">
									 <div class="form-group my-2">
										<%= f.password_field :password_confirmation, autocomplete: "new-password", class: 'form-control', placeholder: 'Confirm Password' %>
									 </div>
									</div>
								 </div>

								 <div class="d-flex flex-column gap-3 justify-content-center align-items-center my-5">
									 <div>
										<%= f.submit "Sign up", class: 'btn btn-primary btn-lg py-3 px-5 fs-6', id: 'btn-register'  %>
									 </div>
									 <div class="mt-3">
										<span>Already have an account? <%= link_to "Sign in", new_session_path(resource_name), style: 'color: #000;', class: 'fw-bold text-decoration-none' %></span>
									 </div>
								 </div>
							 <% end %>
						</div>
				 </div>
			</div>
	 </div>
</div>

<script type="text/javascript">
  document.addEventListener('turbo:load', function() {
    const input = document.querySelector("#phone_number");
    const hiddenPhoneNumber = document.querySelector("#hidden_phone_number");

    if (!input || !hiddenPhoneNumber) return;  // Ensure the elements exist before proceeding

    const iti = intlTelInput(input, {
      initialCountry: "auto",
      geoIpLookup: function(callback) {
        fetch('https://ipinfo.io', { method: 'GET', headers: { 'Accept': 'application/json' } })
          .then(resp => resp.json())
          .then(data => {
            const countryCode = (data && data.country) ? data.country : "us";
            callback(countryCode);
          })
          .catch(() => {
            callback('us');
          });
      },
      separateDialCode: true,
      utilsScript: "https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/utils.js"
    });

    // Set the initial country code when the page loads
    hiddenPhoneNumber.value = iti.getNumber();

    // Update the country code when the flag is changed
    input.addEventListener('countrychange', function() {
      const selectedCountryData = iti.getSelectedCountryData();
      const countryCode = selectedCountryData.dialCode;
      hiddenPhoneNumber.value = `+${countryCode}`;
    });

    // When the form is submitted, set the hidden field with the full phone number
    document.querySelector('form').addEventListener('submit', function() {
      hiddenPhoneNumber.value = iti.getNumber();  // Full number with country code for submission
    });
  });
</script>


