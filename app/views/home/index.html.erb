<div class="col-lg-8 mx-auto mt-5">
  <%= form_with(url: search_results_path, method: :get, local: true) do |form| %>
    <div class="search-bar">
      <div class="search-item">
        <i class="fas fa-dot-circle"></i>
        <span>
          <%= form.text_field :departure_city, class: 'form-control', placeholder: 'Departure', id: 'departure_city_select', autocomplete: 'off' %>
        </span>
      </div>
      <div class="search-item">
        <i class="fas fa-dot-circle"></i>
        <span>
          <%= form.text_field :arrival_city, class: 'form-control', placeholder: 'Arrival', id: 'arrival_city_select', autocomplete: 'off' %>
        </span>
      </div>
      <div class="search-item">
        <i class="fas fa-calendar-alt"></i>
        <span>
          <%= form.text_field :date, class: 'form-control flatpickr', id: 'date_field', placeholder: 'Today' %>
        </span>
      </div>
      <button class="search-button">
        <%= form.submit "Search", class: 'btn' %>
      </button>
    </div>
  <% end %>
</div>

<script>
	document.addEventListener('turbo:load', () => {
    // Reusable function to set up autocomplete
		function setupAutocomplete(inputField, dropdownClassName) {
			const dropdown = document.createElement('ul');
			dropdown.className = dropdownClassName;
			inputField.parentNode.appendChild(dropdown);

			inputField.addEventListener('input', () => {
				const query = inputField.value;
				const url = `/get_cities?query=${encodeURIComponent(query)}`;

				if (query.length > 2) {
                console.log(`Fetching cities from:`, url); // Debugging log

                fetch(url)
                .then(response => {
                	if (!response.ok) {
                		throw new Error(`HTTP error! status: ${response.status}`);
                	}
                	return response.json();
                })
                .then(data => {
                	dropdown.innerHTML = '';

                	data.locations.forEach(location => {
                		const item = document.createElement('li');
                		item.className = 'autocomplete-item';
                		item.innerHTML = `
                		<div>
                			<div class="location">${location.name}</div>
                			<div class="address">${location.area}, ${location.country}</div>
                		</div>
                		<div class="arrow">&gt;</div>
                		`;
                		item.addEventListener('click', () => {
                			inputField.value = location.name;
                			dropdown.innerHTML = '';
                		});
                		dropdown.appendChild(item);
                	});
                })
                .catch(error => console.error('Error fetching cities:', error));
              } else {
              	dropdown.innerHTML = '';
              }
            });

        // Close dropdown when clicking outside
			document.addEventListener('click', (event) => {
				if (!dropdown.contains(event.target) && event.target !== inputField) {
					dropdown.innerHTML = '';
				}
			});
		}

    // Set up autocomplete for both departure and arrival fields
		setupAutocomplete(document.getElementById('departure_city_select'), 'autocomplete-dropdown');
		setupAutocomplete(document.getElementById('arrival_city_select'), 'autocomplete-dropdown');

		flatpickr("#date_field", {
	    dateFormat: "Y-m-d",        // Format used for the form submission
	    altInput: true,             // Show a more readable date format
	  });
	});
</script>